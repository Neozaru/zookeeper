/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef SRC_CONTRIB_ZKCPP_INCLUDE_ZOOKEEPER_H_
#define SRC_CONTRIB_ZKCPP_INCLUDE_ZOOKEEPER_H_

#include <stdint.h>
#include <string>

namespace org { namespace apache { namespace zookeeper {

class ZooKeeperImpl;

/*
 * These constants represent the states of a zookeeper connection. They are
 * possible parameters of the watcher callback.
 */
enum State {
  SESSION_EXPIRED = -112,
  AUTH_FAILED = -113,
  CONNECTING = 1,
  ASSOCIATING = 2,
  CONNECTED = 3,
};

/**
 * These constants indicate the event that caused a watch to trigger. They are
 * possible values of the first parameter of the watcher callback.
 */
enum Event {
  /**
   * \brief a node has been created.
   *
   * This is only generated by watches on non-existent nodes. These watches
   * are set using \ref zoo_exists.
   */
  CREATED = 1,
  /**
   * \brief a node has been deleted.
   *
   * This is only generated by watches on nodes. These watches
   * are set using \ref zoo_exists and \ref zoo_get.
   */
  DELETED = 2,
  /**
   * \brief a node has changed.
   *
   * This is only generated by watches on nodes. These watches
   * are set using \ref zoo_exists and \ref zoo_get.
   */
  CHANGED = 3,
  /**
   * \brief a change as occurred in the list of children.
   *
   * This is only generated by watches on the child list of a node. These watches
   * are set using \ref zoo_get_children or \ref zoo_get_children2.
   */
  CHILD = 4,
  /**
   * \brief a session has been lost.
   *
   * This is generated when a client loses contact or reconnects with a server.
   */
  SESSION = -1,

  /**
   * \brief a watch has been removed.
   *
   * This is generated when the server for some reason, probably a resource
   * constraint, will no longer watch a node for a client.
   */
  NOT_WATCHING = -2
};


class ZooKeeper {
  public:
    ZooKeeper();
    ~ZooKeeper();
    int64_t getSessionId();
    std::string getSessionPassword();

  private:
    ZooKeeperImpl* impl_;
};
}}}

#endif  // SRC_CONTRIB_ZKCPP_INCLUDE_ZOOKEEPER_H_
